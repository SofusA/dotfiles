[language-server.csharpls]
command = "csharp-ls"

[language-server.omnisharp]
command = "omnisharp"
args = ["--languageserver"]

[language-server.angular]
command = "ngserver"
roots = ["angular.json", "nx.json"]
args = [
  "--stdio",
  "--tsProbeLocations",
  "$(npm -g root)",
  "--ngProbeLocations",
  "$(npm -g root)",
]

[language-server.eslint]
command = "vscode-eslint-language-server"
args = ["--stdio"]

[language-server.eslint.config]
validate = "on"
experimental = { useFlatConfig = false }
rulesCustomizations = []
run = "onType"
problems = { shortenToSingleLine = false }
nodePath = ""
format = false
codeAction = { disableRuleComment = { enable = true, location = 'separateLine' }, showDocumentation = { enable = true } }

[[language]]
name = "c-sharp"
scope = "source.csharp"
formatter = { command = "dotnet", args = ["csharpier"] }
injection-regex = "c-?sharp"
file-types = ["cs"]
roots = ["sln", "csproj"]
indent = { tab-width = 2, unit = "  " }
auto-format = true
language-servers = ["omnisharp"]

[[language]]
name = "typescript"
formatter = { command = 'prettier', args = ["--stdin-filepath=lol.ts"] }
auto-format = true
language-servers = ["typescript-language-server", "angular", "eslint", "tailwindcss-ls"]

[[language]]
name = "html"
formatter = { command = 'prettier', args = ["--stdin-filepath=lol.liquid"]}
roots = ["package.json"]
file-types = ["liquid", "html"]
auto-format = true
language-servers = ["vscode-html-language-server", "tailwindcss-ls"]

[[language]]
name = "json"
formatter = { command = 'prettier', args = ["--stdin-filepath=lol.json"] }
auto-format = true

[[language]]
name = "css"
formatter = { command = 'prettier', args = ["--stdin-filepath=lol.css"] }
auto-format = true

[[language]]
name = "scss"
formatter = { command = 'prettier', args = ["--stdin-filepath=lol.cscc"] }
auto-format = true

[language-server.rust-analyzer.config]
check.command = "clippy"

[language-server.tailwindcss-ls]
config = { userLanguages = { rust = "html", "*.rs" = "html" } }

[[language]]
name = "rust"
formatter = { command = "bash", args = ["-c", "rustywind --stdin | leptosfmt --stdin --rustfmt --html-macro html"] }
scope = "source.rust"
injection-regex = "rust"
file-types = ["rs"]
roots = ["Cargo.toml", "Cargo.lock"]
auto-format = true
language-servers = [ "rust-analyzer", "tailwindcss-ls" ]
indent = { tab-width = 4, unit = "    " }
