[language-server.csharpls]
command = "csharp-ls"

[language-server.omnisharp]
command = "omnisharp"
args = ["--languageserver"]

[language-server.angular]
command = "ngserver"
roots = ["angular.json", "nx.json"]
args = [
  "--stdio",
  "--tsProbeLocations",
  "$(npm -g root)",
  "--ngProbeLocations",
  "$(npm -g root)",
]

[language-server.eslint]
command = "vscode-eslint-language-server"
args = ["--stdio"]

[language-server.eslint.config]
validate = "on"
experimental = { useFlatConfig = false }
rulesCustomizations = []
run = "onType"
problems = { shortenToSingleLine = false }
nodePath = ""
format = false
codeAction = { disableRuleComment = { enable = true, location = 'separateLine' }, showDocumentation = { enable = true } }

[[language]]
name = "c-sharp"
scope = "source.csharp"
formatter = { command = "dotnet", args = ["csharpier"] }
injection-regex = "c-?sharp"
file-types = ["cs"]
roots = ["sln", "csproj"]
comment-token = "//"
indent = { tab-width = 2, unit = "  " }
auto-format = true
language-servers = ["csharpls"]

[[language]]
name = "typescript"
formatter = { command = 'prettier', args = [
  "--write",
  "--parser",
  "typescript",
] }
auto-format = true
language-servers = ["typescript-language-server", "angular", "eslint", "tailwindcss-ls"]

[[language]]
name = "html"
formatter = { command = 'prettier', args = ["--write", "--parser", "html"] }
auto-format = true
language-servers = ["vscode-html-language-server", "angular", "tailwindcss-ls"]

[[language]]
name = "json"
formatter = { command = 'prettier', args = ["--write", "--parser", "json"] }
auto-format = true

[[language]]
name = "css"
formatter = { command = 'prettier', args = ["--write", "--parser", "css"] }
auto-format = true

[[language]]
name = "scss"
formatter = { command = 'prettier', args = ["--write", "--parser", "scss"] }
auto-format = true
