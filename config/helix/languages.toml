# [language-server.omnisharp]
# command = "omnisharp"
# args = ["--languageserver"]

[language-server.angular]
command = "ngserver"
args = ["--stdio", "--tsProbeLocations", "/var/home/sofusa/.npm-packages/lib/node_modules", "--ngProbeLocations", "/var/home/sofusa/.npm-packages/lib/node_modules"]

[language-server.eslint]
command = "vscode-eslint-language-server"
args = ["--stdio"]

[language-server.eslint.config]
validate = "on"
experimental = { useFlatConfig = false }
rulesCustomizations = []
run = "onType"
problems = { shortenToSingleLine = false }
nodePath = ""
format = false
codeAction = { disableRuleComment = { enable = true, location = 'separateLine' }, showDocumentation = { enable = true }}

[[language]]
name = "c-sharp"
formatter = { command = "dotnet-csharpier" }
auto-format = true

[[language]]
name = "typescript"
formatter = { command = 'prettier', args = ["--write", "--parser", "typescript", "--trailing-comma", "all" ] }
auto-format = true
language-servers = ["typescript-language-server", "angular", "eslint"]

[[language]]
name = "html"
formatter = { command = 'prettier', args = ["--write", "--parser", "html"] }
auto-format = true
language-servers = ["vscode-html-language-server", "angular"]

[[language]]
name = "json"
formatter = { command = 'prettier', args = ["--write", "--parser", "json"] }
auto-format = true

[[language]]
name = "css"
formatter = { command = 'prettier', args = ["--write", "--parser", "css"] }
auto-format = true

[[language]]
name = "scss"
formatter = { command = 'prettier', args = ["--write", "--parser", "scss"] }
auto-format = true
